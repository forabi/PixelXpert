//file:noinspection SpellCheckingInspection
plugins {
	id 'com.android.application'
}
apply plugin: 'kotlin-android'

android {
	compileSdk 34

	defaultConfig {
		applicationId "sh.siava.pixelxpert"
		minSdk 33
		targetSdk 34
		versionCode 336
		versionName "3.3.2"

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
	}

	final def keystorePropertiesFile = rootProject.file("ReleaseKey.properties")

	def releaseSignature = signingConfigs.debug
	try(def keystorePropertiesStream = new FileInputStream(keystorePropertiesFile))
	{
		final def keystoreProperties = new Properties()
		keystoreProperties.load(keystorePropertiesStream)
		releaseSignature = signingConfigs.create("releaseSignature")
				{
					keyAlias keystoreProperties['keyAlias']
					keyPassword keystoreProperties['keyPassword']
					storeFile rootProject.file(keystoreProperties['storeFile'])
					storePassword keystoreProperties['storePassword']
				}
	}
	catch(ignored)
	{}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			signingConfig releaseSignature
		}
		debug {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			signingConfig releaseSignature
		}
	}

	applicationVariants.configureEach { variant ->
		variant.outputs.configureEach { output ->
			outputFileName = new File("PixelXpert.apk")
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_9
		targetCompatibility JavaVersion.VERSION_1_9
	}
	lint {
		checkReleaseBuilds false
		abortOnError false
	}
	namespace 'sh.siava.pixelxpert'
	buildFeatures {
		viewBinding true
		aidl true
	}
	kotlinOptions {
		jvmTarget = '9'
	}
}

dependencies {
	def libsuVersion = '5.2.2'

	// Xposed api
	compileOnly files('lib/api-82.jar')
	compileOnly files('lib/api-82-sources.jar')

	implementation project(path: ':RangeSliderPreference')

	implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
	implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'
	implementation 'androidx.navigation:navigation-ui-ktx:2.7.7'
	implementation 'androidx.navigation:navigation-fragment-ktx:2.7.7'
	implementation 'androidx.navigation:navigation-ui-ktx:2.7.7'
	implementation 'androidx.appcompat:appcompat:1.6.1'
	implementation 'androidx.annotation:annotation:1.7.1'
	implementation 'androidx.preference:preference-ktx:1.2.1'
	implementation 'androidx.recyclerview:recyclerview:1.3.2'
	implementation 'com.google.android.material:material:1.12.0-alpha03'
	implementation 'androidx.compose.ui:ui-geometry:1.6.1'
	//noinspection KtxExtensionAvailable
	implementation 'androidx.activity:activity:1.8.2'
	implementation 'androidx.work:work-runtime:2.9.0'
	implementation "androidx.concurrent:concurrent-futures:1.1.0"


	// The core module that provides APIs to a shell
	implementation "com.github.topjohnwu.libsu:core:${libsuVersion}"
	// Optional: APIs for creating root services. Depends on ":core"
	implementation "com.github.topjohnwu.libsu:service:${libsuVersion}"
	// Optional: Provides remote file system support
	implementation "com.github.topjohnwu.libsu:nio:${libsuVersion}"

	implementation 'com.crossbowffs.remotepreferences:remotepreferences:0.8'
	// Remote Preferences for Xposed Module prefs
	implementation 'com.jaredrummler:colorpicker:1.1.0' //Color Picker Component for UI
	implementation 'com.github.mfathi91:persian-date-time:4.2.1' //Persian Calendar

	implementation 'com.github.tiagohm.MarkdownView:library:0.19.0' //Markdown reader

	// Search Preference
	implementation 'androidx.cardview:cardview:1.0.0'
	implementation 'org.apache.commons:commons-text:1.11.0'

	// SwipeRefreshLayout
	implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.2.0-alpha01"

	// Class initializer
	// https://mvnrepository.com/artifact/org.objenesis/objenesis
	implementation 'org.objenesis:objenesis:3.3'

	//NTP Client
	implementation "com.lyft.kronos:kronos-android:0.0.1-alpha11"
}